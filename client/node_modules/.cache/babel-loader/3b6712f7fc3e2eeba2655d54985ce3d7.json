{"ast":null,"code":"var _jsxFileName = \"/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/src/containers/FirstContainer.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Homepage from '../components/Homepage';\nimport LoginPage from '../components/LoginPage';\nimport SignupPage from '../components/SignupPage';\nimport Map from '../components/Map';\nimport ProfilePage from '../components/ProfilePage';\nimport ComingSoon from '../components/ComingSoon';\nexport default class FirstContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: ''\n    };\n\n    this.handleSubmit = (userData, history, endpoint, alertMessage) => {\n      fetch(\"localhost:3000/\".concat(endpoint), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          userData\n        })\n      }).then(resp => resp.json()).then(parsedResponse => {\n        if (parsedResponse.token) {\n          localStorage.setItem('token', parsedResponse.token);\n          this.setState({\n            user: parsedResponse.user\n          });\n          history.push('/map');\n        } else {\n          alert(alertMessage);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      fetch('/profile', {\n        headers: {\n          Authorization: localStorage.token\n        }\n      }).then(resp => resp.json()).then(userInfo => {\n        this.setState({\n          user: userInfo.data.attributes\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/map\",\n      render: routerProps => React.createElement(Map, Object.assign({}, routerProps, {\n        userInfo: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: routerProps => React.createElement(ProfilePage, Object.assign({}, routerProps, {\n        userInfo: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      render: routerProps => React.createElement(ComingSoon, Object.assign({}, routerProps, {\n        userInfo: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), localStorage.token ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : React.createElement(Route, {\n      path: \"/signup\",\n      render: routerProps => React.createElement(SignupPage, Object.assign({}, routerProps, {\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), localStorage.token ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : React.createElement(Route, {\n      path: \"/login\",\n      render: routerProps => React.createElement(LoginPage, Object.assign({}, routerProps, {\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/src/containers/FirstContainer.js"],"names":["React","Component","Switch","Route","Redirect","Homepage","LoginPage","SignupPage","Map","ProfilePage","ComingSoon","FirstContainer","state","user","handleSubmit","userData","history","endpoint","alertMessage","fetch","method","headers","body","JSON","stringify","then","resp","json","parsedResponse","token","localStorage","setItem","setState","push","alert","componentDidMount","Authorization","userInfo","data","attributes","render","routerProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport Homepage from '../components/Homepage'\nimport LoginPage from '../components/LoginPage'\nimport SignupPage from '../components/SignupPage'\nimport Map from '../components/Map'\nimport ProfilePage from '../components/ProfilePage'\nimport ComingSoon from '../components/ComingSoon'\n\nexport default class FirstContainer extends Component {\n\n  state = {\n    user: ''\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      fetch('/profile', {\n        headers: {\n          Authorization: localStorage.token\n        }\n      })\n        .then(resp => resp.json())\n        .then(userInfo => {\n          this.setState({ user: userInfo.data.attributes })\n        })\n    }\n  }\n\n  handleSubmit = (userData, history, endpoint, alertMessage) => {\n    fetch(`localhost:3000/${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({ userData })\n    })\n      .then(resp => resp.json())\n      .then(parsedResponse => {\n        if (parsedResponse.token) {\n          localStorage.setItem('token', parsedResponse.token)\n          this.setState({ user: parsedResponse.user })\n          history.push('/map')\n        } else {\n          alert(alertMessage)\n        }\n      })\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Homepage} />\n        <Route path='/map' render={(routerProps) => <Map {...routerProps} userInfo={this.state.user} />} />\n        <Route path='/profile' render={(routerProps) => <ProfilePage {...routerProps} userInfo={this.state.user} />} />\n        <Route path='/about' render={(routerProps) => <ComingSoon {...routerProps} userInfo={this.state.user} />} />\n        {localStorage.token ? <Redirect to='/'/> : <Route path='/signup' render={(routerProps) => <SignupPage {...routerProps} handleSubmit={this.handleSubmit} />} />}\n        {localStorage.token ? <Redirect to='/'/> : <Route path='/login' render={(routerProps) => <LoginPage {...routerProps} handleSubmit={this.handleSubmit} />} />}\n      </Switch>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/src/components/Map.js\";\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport MarkersContainer from '../containers/MarkersContainer';\nimport TopNavBar from './TopNavBar';\nimport style from './Map.json';\nimport { MDBNotification } from 'mdbreact';\nimport './Map.css';\n\nconst Map = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        locationCoordinates = _useState2[0],\n        setLocationCoordinates = _useState2[1];\n\n  const _useState3 = useState({\n    lat: 28.435665,\n    lng: 14.648057\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        initialLocationCoordinates = _useState4[0],\n        setInitialLocationCoordinates = _useState4[1];\n\n  const _useState5 = useState(3),\n        _useState6 = _slicedToArray(_useState5, 2),\n        initialZoomLevel = _useState6[0],\n        setInitialZoomLevel = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        searchedLocationCoordinates = _useState8[0],\n        setSearchedLocationCoordinates = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        searchedZoomLevel = _useState10[0],\n        setSearchedZoomLevel = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        toggleSwitchOn = _useState12[0],\n        setToggleSwitchOn = _useState12[1];\n\n  const handleSearchFormOnSubmit = (e, searchInput) => {\n    e.preventDefault();\n    let foundLocation = locationCoordinates.find(location => location.attributes.name.toLowerCase().includes(searchInput.toLowerCase()));\n    setSearchedLocationCoordinates({\n      lat: parseFloat(foundLocation.attributes.latitude),\n      lng: parseFloat(foundLocation.attributes.longitude)\n    });\n    setSearchedZoomLevel(6);\n  };\n\n  const handleToggleSwitchClick = () => setToggleSwitchOn(!toggleSwitchOn);\n\n  const addLocationCoordinates = locationsInfo => {\n    setLocationCoordinates(locationsInfo);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"map-component\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(TopNavBar, Object.assign({}, props, {\n    buttonName: \"Login\",\n    navPath: \"/login\",\n    handleSearchFormOnSubmit: handleSearchFormOnSubmit,\n    handleToggleSwitchClick: handleToggleSwitchClick,\n    toggleSwitchOn: toggleSwitchOn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(LoadScript, {\n    id: \"script-loader\",\n    googleMapsApiKey: \"AIzaSyCDqYru3D32INEjCkIOPB48OqjEWksoAXI\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(MDBNotification, {\n    autohide: 5000,\n    bodyClassName: \"p-5 font-weight-bold white-text\",\n    className: \"stylish-color-dark\",\n    closeClassName: \"blue-grey-text\",\n    fade: true,\n    icon: \"bell\",\n    iconClassName: \"blue-grey-text\",\n    message: \"Loading Map and Markers. Please Wait...\",\n    show: true,\n    text: \"Just Now\",\n    titleClassName: \"elegant-color-dark white-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(GoogleMap, {\n    id: \"world-map\",\n    options: toggleSwitchOn ? {\n      styles: null\n    } : {\n      styles: style\n    },\n    clickableIcons: true,\n    mapContainerStyle: {\n      height: \"91.5vh\",\n      width: \"100vw\"\n    },\n    zoom: searchedZoomLevel ? searchedZoomLevel : initialZoomLevel,\n    center: searchedLocationCoordinates ? searchedLocationCoordinates : initialLocationCoordinates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(MarkersContainer, {\n    userInfo: props.userInfo,\n    addLocationCoordinates: addLocationCoordinates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/src/components/Map.js"],"names":["React","useState","GoogleMap","LoadScript","MarkersContainer","TopNavBar","style","MDBNotification","Map","props","locationCoordinates","setLocationCoordinates","lat","lng","initialLocationCoordinates","setInitialLocationCoordinates","initialZoomLevel","setInitialZoomLevel","searchedLocationCoordinates","setSearchedLocationCoordinates","searchedZoomLevel","setSearchedZoomLevel","toggleSwitchOn","setToggleSwitchOn","handleSearchFormOnSubmit","e","searchInput","preventDefault","foundLocation","find","location","attributes","name","toLowerCase","includes","parseFloat","latitude","longitude","handleToggleSwitchClick","addLocationCoordinates","locationsInfo","styles","height","width","userInfo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { GoogleMap, LoadScript } from '@react-google-maps/api'\nimport MarkersContainer from '../containers/MarkersContainer';\nimport TopNavBar from './TopNavBar'\nimport style from './Map.json'\nimport { MDBNotification } from 'mdbreact'\nimport './Map.css'\n\nconst Map = props => {\n\n  const [locationCoordinates, setLocationCoordinates] = useState([])\n  const [initialLocationCoordinates, setInitialLocationCoordinates] = useState({ lat: 28.435665, lng: 14.648057 })\n  const [initialZoomLevel, setInitialZoomLevel] = useState(3)\n  const [searchedLocationCoordinates, setSearchedLocationCoordinates] = useState('')\n  const [searchedZoomLevel, setSearchedZoomLevel] = useState(0)\n  const [toggleSwitchOn, setToggleSwitchOn] = useState(false)\n\n  const handleSearchFormOnSubmit = (e, searchInput) => {\n    e.preventDefault()\n    let foundLocation = locationCoordinates.find(location => location.attributes.name.toLowerCase().includes(searchInput.toLowerCase()))\n    setSearchedLocationCoordinates({ lat: parseFloat(foundLocation.attributes.latitude), lng: parseFloat(foundLocation.attributes.longitude) })\n    setSearchedZoomLevel(6)\n  }\n\n  const handleToggleSwitchClick = () => setToggleSwitchOn(!toggleSwitchOn)\n\n  const addLocationCoordinates = (locationsInfo) => { setLocationCoordinates(locationsInfo) }\n\n  return (\n    <div className=\"map-component\">\n      <TopNavBar {...props} buttonName={\"Login\"} navPath={\"/login\"} handleSearchFormOnSubmit={handleSearchFormOnSubmit} handleToggleSwitchClick={handleToggleSwitchClick} toggleSwitchOn={toggleSwitchOn} />\n      <LoadScript\n        id=\"script-loader\"\n        googleMapsApiKey=\"AIzaSyCDqYru3D32INEjCkIOPB48OqjEWksoAXI\"\n      >\n\n        <MDBNotification\n          autohide={5000}\n          bodyClassName=\"p-5 font-weight-bold white-text\"\n          className=\"stylish-color-dark\"\n          closeClassName=\"blue-grey-text\"\n          fade\n          icon=\"bell\"\n          iconClassName=\"blue-grey-text\"\n          message=\"Loading Map and Markers. Please Wait...\"\n          show\n          text=\"Just Now\"\n          titleClassName=\"elegant-color-dark white-text\"\n        />\n        <GoogleMap\n          id='world-map'\n          options={toggleSwitchOn ? { styles: null } : { styles: style }}\n          clickableIcons={true}\n          mapContainerStyle={{\n            height: \"91.5vh\",\n            width: \"100vw\",\n          }}\n          zoom={searchedZoomLevel ? searchedZoomLevel : initialZoomLevel}\n          center={searchedLocationCoordinates ? searchedLocationCoordinates : initialLocationCoordinates}\n        >\n          <MarkersContainer userInfo={props.userInfo} addLocationCoordinates={addLocationCoordinates} />\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}
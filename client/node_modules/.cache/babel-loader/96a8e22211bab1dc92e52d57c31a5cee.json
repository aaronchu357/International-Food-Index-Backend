{"ast":null,"code":"var _jsxFileName = \"/Users/aaronchu/Flatiron/projects/mod-5-final/international-food-index-backend/client/src/components/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport TopNavBar from './TopNavBar';\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userComments: [],\n      userNationalDishes: []\n    };\n\n    this.handleButtonClick = (e, commentId) => {\n      if (e.target.name === 'edit') {\n        console.log(\"edit\");\n        alert(\"Working on it!!!\");\n      } else if (e.target.name === 'delete') {\n        fetch(\"/comments/\".concat(commentId), {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        window.location.reload();\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userInfo !== prevProps.userInfo) {\n      fetch(\"/comments\").then(resp => resp.json()).then(commentsData => {\n        let userId = this.props.userInfo.id;\n        let foundComments = commentsData.data.filter(comment => comment.attributes.user.id === userId);\n        this.setState({\n          userComments: foundComments\n        });\n      });\n    }\n  }\n\n  render() {\n    const generateUserComments = this.state.userComments.map(comment => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"National Dish: \", comment.attributes.national_dish.name), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Rating: \", comment.attributes.rating), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Content: \", comment.attributes.content), React.createElement(\"button\", {\n        type: \"button\",\n        name: \"edit\",\n        onClick: e => this.handleButtonClick(e, comment.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        type: \"button\",\n        name: \"delete\",\n        onClick: e => this.handleButtonClick(e, comment.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Delete\"));\n    });\n    return React.createElement(\"div\", {\n      className: \"profile-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TopNavBar, Object.assign({}, this.props, {\n      buttonName: \"Login\",\n      navPath: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), \"WORK IN PROGRESS:\", React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"My Comments:\"), generateUserComments);\n  }\n\n}\n\nexport default ProfilePage;","map":{"version":3,"sources":["/Users/aaronchu/Flatiron/projects/mod-5-final/international-food-index-backend/client/src/components/ProfilePage.js"],"names":["React","Component","TopNavBar","ProfilePage","state","userComments","userNationalDishes","handleButtonClick","e","commentId","target","name","console","log","alert","fetch","method","headers","window","location","reload","componentDidUpdate","prevProps","props","userInfo","then","resp","json","commentsData","userId","id","foundComments","data","filter","comment","attributes","user","setState","render","generateUserComments","map","national_dish","rating","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TopNavBar from './TopNavBar'\n\nclass ProfilePage extends Component {\n\n  state = {\n    userComments: [],\n    userNationalDishes: []\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userInfo !== prevProps.userInfo) {\n      fetch(`/comments`)\n        .then(resp => resp.json())\n        .then(commentsData => {\n          let userId = this.props.userInfo.id\n          let foundComments = commentsData.data.filter(comment => comment.attributes.user.id === userId)\n          this.setState({ userComments: foundComments })\n        })\n    }\n  }\n\n  handleButtonClick = (e, commentId) => {\n    if (e.target.name === 'edit') {\n      console.log(\"edit\")\n      alert(\"Working on it!!!\")\n    } else if (e.target.name === 'delete') {\n      fetch(`/comments/${commentId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      })\n      window.location.reload()\n    }\n  }\n\n  render() {\n    const generateUserComments = this.state.userComments.map(comment => {\n      return (\n        <div>\n          <h6>National Dish: {comment.attributes.national_dish.name}</h6>\n          <h6>Rating: {comment.attributes.rating}</h6>\n          <h6>Content: {comment.attributes.content}</h6>\n\n          <button type='button' name='edit' onClick={(e) => this.handleButtonClick(e, comment.id)}>Edit</button>\n          <button type='button' name='delete' onClick={(e) => this.handleButtonClick(e, comment.id)}>Delete</button>\n        </div>\n      )\n    })\n    return (\n      <div className='profile-page'>\n        <TopNavBar {...this.props} buttonName={\"Login\"} navPath={\"/login\"} />\n        WORK IN PROGRESS:\n        <h4>My Comments:</h4>\n        {generateUserComments}\n      </div>\n    )\n  }\n}\n\nexport default ProfilePage"]},"metadata":{},"sourceType":"module"}
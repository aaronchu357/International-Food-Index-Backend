{"ast":null,"code":"var _jsxFileName = \"/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/src/components/MapInfoWindow.js\";\nimport React, { Component, Fragment } from 'react';\nimport { InfoWindow } from '@react-google-maps/api';\nimport NationalDishExpandedDetails from './NationalDishExpandedDetails';\nimport NationalDishContainer from '../containers/NationalDishContainer';\n\nclass MapInfoWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nationalDishClicked: false,\n      nationalDishSelected: [],\n      modalShow: false,\n      modalCommentShow: false\n    };\n\n    this.handhandleNationalDishOnClick = dishData => {\n      this.setState({\n        nationalDishClicked: true,\n        nationalDishSelected: dishData\n      });\n    };\n\n    this.setModalShow = boolean => {\n      this.setState({\n        modalShow: boolean\n      });\n    };\n\n    this.setCommentModalShow = boolean => {\n      this.setState({\n        modalCommentShow: boolean\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.locationInfo !== prevProps.locationInfo) {\n      let dishesId = this.props.locationInfo.relationships.national_dishes.data.map(dish => dish.id);\n      fetch('/national_dishes').then(resp => resp.json()).then(dishes => {\n        let foundDishes = dishes.data.filter(dish => {\n          return dishesId.includes(dish.id);\n        });\n        this.setState({\n          dishes: [...foundDishes]\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(InfoWindow, {\n      position: {\n        lat: parseFloat(this.props.locationInfo.attributes.latitude),\n        lng: parseFloat(this.props.locationInfo.attributes.longitude)\n      },\n      onCloseClick: this.props.handleInfoWindowCloseClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: 'white',\n        padding: 15,\n        maxWidth: 400,\n        maxHeight: 250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.locationInfo.attributes.name), React.createElement(NationalDishContainer, {\n      dishes: this.props.locationDishes,\n      handhandleNationalDishOnClick: this.handhandleNationalDishOnClick,\n      setModalShow: this.setModalShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), this.state.nationalDishClicked ? React.createElement(NationalDishExpandedDetails, {\n      nationalDishSelected: this.state.nationalDishSelected,\n      addComment: this.addComment,\n      show: this.state.modalShow,\n      onHide: () => this.setModalShow(false),\n      userInfo: this.props.userInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default MapInfoWindow;","map":{"version":3,"sources":["/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/src/components/MapInfoWindow.js"],"names":["React","Component","Fragment","InfoWindow","NationalDishExpandedDetails","NationalDishContainer","MapInfoWindow","state","nationalDishClicked","nationalDishSelected","modalShow","modalCommentShow","handhandleNationalDishOnClick","dishData","setState","setModalShow","boolean","setCommentModalShow","componentDidUpdate","prevProps","props","locationInfo","dishesId","relationships","national_dishes","data","map","dish","id","fetch","then","resp","json","dishes","foundDishes","filter","includes","render","lat","parseFloat","attributes","latitude","lng","longitude","handleInfoWindowCloseClick","background","padding","maxWidth","maxHeight","name","locationDishes","addComment","userInfo"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { InfoWindow } from '@react-google-maps/api'\nimport NationalDishExpandedDetails from './NationalDishExpandedDetails'\nimport NationalDishContainer from '../containers/NationalDishContainer'\n\nclass MapInfoWindow extends Component {\n\n  state = {\n    nationalDishClicked: false,\n    nationalDishSelected: [],\n    modalShow: false,\n    modalCommentShow: false\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.locationInfo !== prevProps.locationInfo) {\n      let dishesId = this.props.locationInfo.relationships.national_dishes.data.map(dish => dish.id)\n      fetch('/national_dishes')\n        .then(resp => resp.json())\n        .then(dishes => {\n          let foundDishes = dishes.data.filter(dish => {\n            return dishesId.includes(dish.id)\n          })\n          this.setState({ dishes: [...foundDishes] })\n        })\n    }\n  }\n\n  handhandleNationalDishOnClick = (dishData) => {\n    this.setState({\n      nationalDishClicked: true,\n      nationalDishSelected: dishData\n    })\n  }\n\n  setModalShow = (boolean) => {\n    this.setState({ modalShow: boolean })\n  }\n\n  setCommentModalShow = (boolean) => {\n    this.setState({ modalCommentShow: boolean })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <InfoWindow\n          position={{ lat: parseFloat(this.props.locationInfo.attributes.latitude), lng: parseFloat(this.props.locationInfo.attributes.longitude) }}\n          onCloseClick={this.props.handleInfoWindowCloseClick}\n        >\n          <div style={{\n            background: 'white',\n            padding: 15,\n            maxWidth: 400,\n            maxHeight: 250,\n          }}>\n            <h1>{this.props.locationInfo.attributes.name}</h1>\n            <NationalDishContainer dishes={this.props.locationDishes} handhandleNationalDishOnClick={this.handhandleNationalDishOnClick} setModalShow={this.setModalShow} />\n          </div>\n        </InfoWindow>\n        {this.state.nationalDishClicked ? <NationalDishExpandedDetails nationalDishSelected={this.state.nationalDishSelected} addComment={this.addComment} show={this.state.modalShow} onHide={() => this.setModalShow(false)} userInfo={this.props.userInfo} /> : null}\n      </Fragment>\n    )\n  }\n}\n\nexport default MapInfoWindow"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/src/components/CountdownTimer.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './CountdownTimer.css';\nimport { getCountdownTimer } from '../actions/problemActions';\n\nconst CountdownTimer = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        days = _useState2[0],\n        setDays = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hours = _useState4[0],\n        setHours = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        minutes = _useState6[0],\n        setMinutes = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        seconds = _useState8[0],\n        setSeconds = _useState8[1];\n\n  setInterval(() => {\n    const currentDate = new Date().getTime();\n    const distance = props.deadlineDate - currentDate;\n    setDays(Math.floor(distance / (1000 * 60 * 60 * 24)));\n    setHours(Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\n    setMinutes(Math.floor(distance % (1000 * 60 * 60) / (1000 * 60)));\n    setSeconds(Math.floor(distance % (1000 * 60) / 1000));\n  }, 1000);\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"coming-soon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Coming Soon...\"), React.createElement(\"div\", {\n    className: \"countdown-timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"countdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"countdown__days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, days), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Days\")), React.createElement(\"div\", {\n    className: \"countdown__hours\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, hours), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Hours\")), React.createElement(\"div\", {\n    className: \"countdown__minutes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, minutes), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Minutes\")), React.createElement(\"div\", {\n    className: \"countdown__seconds\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, seconds), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Seconds\"))), React.createElement(\"p\", {\n    className: \"under-development-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Our page is under development. We`ll be here soon with our new awesome functions.\")));\n};\n\nconst mapDispatchToProps = {\n  getProblem: getCurrentProblem\n};\n\nconst mapStateToProps = state => ({\n  time: state.countdownTime\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountdownTimer);","map":{"version":3,"sources":["/Users/aaronchu/Development/projects/mod-5-final/international-food-index-backend/client/src/components/CountdownTimer.js"],"names":["React","useState","connect","getCountdownTimer","CountdownTimer","props","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","setInterval","currentDate","Date","getTime","distance","deadlineDate","Math","floor","mapDispatchToProps","getProblem","getCurrentProblem","mapStateToProps","state","time","countdownTime"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport './CountdownTimer.css'\nimport { getCountdownTimer } from '../actions/problemActions'\n\nconst CountdownTimer = props => {\n  const [days, setDays] = useState(null)\n  const [hours, setHours] = useState(null)\n  const [minutes, setMinutes] = useState(null)\n  const [seconds, setSeconds] = useState(null)\n\n  setInterval(() => {\n    const currentDate = new Date().getTime();\n    const distance = props.deadlineDate - currentDate;\n    setDays(Math.floor(distance / (1000 * 60 * 60 * 24)))\n    setHours(Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))\n    setMinutes(Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)))\n    setSeconds(Math.floor((distance % (1000 * 60)) / 1000))\n  }, 1000)\n\n\n  return (\n    <div className=\"wrapper\">\n      <h3 className=\"coming-soon\">Coming Soon...</h3>\n      <div className=\"countdown-timer\">\n        <div className=\"countdown\">\n          <div className=\"countdown__days\">\n            <div className=\"number\">{days}</div>\n            <span>Days</span>\n          </div>\n\n          <div className=\"countdown__hours\">\n            <div className=\"number\">{hours}</div>\n            <span>Hours</span>\n          </div>\n\n          <div className=\"countdown__minutes\">\n            <div className=\"number\">{minutes}</div>\n            <span>Minutes</span>\n          </div>\n\n          <div className=\"countdown__seconds\">\n            <div className=\"number\">{seconds}</div>\n            <span>Seconds</span>\n          </div>\n        </div>\n\n        <p className=\"under-development-message\">Our page is under development. We`ll be here soon with our new awesome functions.</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  getProblem: getCurrentProblem\n}\n\nconst mapStateToProps = state => ({\n  time: state.countdownTime\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(CountdownTimer)"]},"metadata":{},"sourceType":"module"}
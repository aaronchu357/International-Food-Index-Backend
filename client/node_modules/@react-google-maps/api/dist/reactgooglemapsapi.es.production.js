import t,{useContext as e,createContext as n,createElement as o,Fragment as r,PureComponent as s,createRef as i,useRef as a,useState as p,useEffect as c,memo as l,Children as u,Component as d}from"react";import h from"invariant";import{Clusterer as g}from"@react-google-maps/marker-clusterer";import{createPortal as f}from"react-dom";function m(){return(m=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t}).apply(this,arguments)}function v(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}var y=n(null);function M(){e||h(!1);var t=e(y);return t||h(!1),t}var C=function(t,e,n){return Object.keys(t).reduce(function(n,o){return e(n,t[o],o)},n)},E=function(t,e,n,o){var r,s,i={};return r=t,s=function(t,r){var s=n[r];s!==e[r]&&(i[r]=s,t(o,s))},Object.keys(r).forEach(function(t){return s(r[t],t)}),i};function k(t){google.maps.event.removeListener(t)}function b(t){void 0===t&&(t=[]),t.map(k)}function w(t){var e=t.eventMap,n=t.nextProps,o=t.instance;return E(t.updaterMap,t.prevProps,n,o),function(t,e,n){return C(n,function(n,o,r){return"function"==typeof t[r]&&n.push(google.maps.event.addListener(e,o,t[r])),n},[])}(n,o,e)}var P={onDblClick:"dblclick",onDragEnd:"dragend",onDragStart:"dragstart",onMapTypeIdChanged:"maptypeid_changed",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseDown:"mousedown",onMouseUp:"mouseup",onRightClick:"rightclick",onTilesLoaded:"tilesloaded",onBoundsChanged:"bounds_changed",onCenterChanged:"center_changed",onClick:"click",onDrag:"drag",onHeadingChanged:"heading_changed",onIdle:"idle",onProjectionChanged:"projection_changed",onResize:"resize",onTiltChanged:"tilt_changed",onZoomChanged:"zoom_changed"},x={extraMapTypes:function(t,e){e.forEach(function(e,n){t.mapTypes.set(String(n),e)})},center:function(t,e){t.setCenter(e)},clickableIcons:function(t,e){t.setClickableIcons(e)},heading:function(t,e){t.setHeading(e)},mapTypeId:function(t,e){t.setMapTypeId(e)},options:function(t,e){t.setOptions(e)},streetView:function(t,e){t.setStreetView(e)},tilt:function(t,e){t.setTilt(e)},zoom:function(t,e){t.setZoom(e)}},L=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).state={map:null},e.registeredEvents=[],e.mapRef=null,e.getInstance=function(){return new google.maps.Map(e.mapRef,e.props.options)},e.setMapCallback=function(){null!==e.state.map&&e.props.onLoad&&e.props.onLoad(e.state.map)},e.getRef=function(t){e.mapRef=t},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=this.getInstance();this.registeredEvents=w({updaterMap:x,eventMap:P,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{map:t}},this.setMapCallback)},n.componentDidUpdate=function(t){null!==this.state.map&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:x,eventMap:P,prevProps:t,nextProps:this.props,instance:this.state.map}))},n.componentWillUnmount=function(){null!==this.state.map&&(this.props.onUnmount&&this.props.onUnmount(this.state.map),b(this.registeredEvents))},n.render=function(){return o("div",{id:this.props.id,ref:this.getRef,style:this.props.mapContainerStyle,className:this.props.mapContainerClassName},o(y.Provider,{value:this.state.map},null!==this.state.map?this.props.children:o(r,null)))},e}(s),D="undefined"!=typeof document,S=function(t){var e=t.url,n=t.id;return D?new Promise(function(t,o){if(document.getElementById(n))return t(n);var r=document.createElement("script");r.type="text/javascript",r.src=e,r.id=n,r.async=!0,r.onload=function(){t(n)},r.onerror=o,document.head.appendChild(r)}).catch(function(t){console.error("injectScript error: ",t)}):Promise.reject(new Error("document is undefined"))},U=function(t){return!((!t.href||0!==t.href.indexOf("https://fonts.googleapis.com/css?family=Roboto"))&&("style"===t.tagName.toLowerCase()&&t.styleSheet&&t.styleSheet.cssText&&0===t.styleSheet.cssText.replace("\r\n","").indexOf(".gm-style")?(t.styleSheet.cssText="",0):"style"===t.tagName.toLowerCase()&&t.innerHTML&&0===t.innerHTML.replace("\r\n","").indexOf(".gm-style")?(t.innerHTML="",0):"style"!==t.tagName.toLowerCase()||t.styleSheet||t.innerHTML))},O=function(){var t=document.getElementsByTagName("head")[0],e=t.insertBefore.bind(t);t.insertBefore=function(n,o){U(n)||Reflect.apply(e,t,[n,o])};var n=t.appendChild.bind(t);t.appendChild=function(e){U(e)||Reflect.apply(n,t,[e])}};function T(t){var e=t.googleMapsApiKey,n=t.googleMapsClientId,o=t.version,r=void 0===o?"weekly":o,s=t.language,i=t.region,a=t.libraries,p=[];return e&&n||!e||!n||h(!1),e?p.push("key="+e):n&&p.push("client="+n),r&&p.push("v="+r),s&&p.push("language="+s),i&&p.push("region="+i),a&&a.length&&p.push("libraries="+a.join(",")),"https://maps.googleapis.com/maps/api/js?"+p.join("&")}var R=!1;function V(){return o("div",null,"Loading...")}var _,I={id:"script-loader",version:"weekly"},W=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).check=i(),e.state={loaded:!1},e.cleanupCallback=function(){delete window.google,e.injectScript()},e.isCleaningUp=function(){try{return Promise.resolve(new Promise(function(t){if(R){if(D)var e=window.setInterval(function(){R||(window.clearInterval(e),t())},1)}else t()}))}catch(t){return Promise.reject(t)}},e.cleanup=function(){R=!0;var t=document.getElementById(e.props.id);t&&t.parentNode&&t.parentNode.removeChild(t),Array.prototype.slice.call(document.getElementsByTagName("script")).filter(function(t){return t.src.includes("maps.googleapis")}).forEach(function(t){t.parentNode&&t.parentNode.removeChild(t)}),Array.prototype.slice.call(document.getElementsByTagName("link")).filter(function(t){return"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans"===t.href}).forEach(function(t){t.parentNode&&t.parentNode.removeChild(t)}),Array.prototype.slice.call(document.getElementsByTagName("style")).filter(function(t){return void 0!==t.innerText&&t.innerText.length>0&&t.innerText.includes(".gm-")}).forEach(function(t){t.parentNode&&t.parentNode.removeChild(t)})},e.injectScript=function(){e.props.preventGoogleFontsLoading&&O(),e.props.id||h(!1);var t={id:e.props.id,url:T(e.props)};S(t).then(function(){e.props.onLoad&&e.props.onLoad(),e.setState(function(){return{loaded:!0}})}).catch(function(t){e.props.onError&&e.props.onError(t),console.error("\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key ("+(e.props.googleMapsApiKey||"-")+") or Client ID ("+(e.props.googleMapsClientId||"-")+") to <LoadScript />\n          Otherwise it is a Network issue.\n        ")})},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){if(D){if(window.google&&!R)return void console.error("google api is already presented");this.isCleaningUp().then(this.injectScript).catch(function(t){console.error("Error at injecting script after cleaning up: ",t)})}},n.componentDidUpdate=function(t){this.props.libraries!==t.libraries&&console.warn("Performance warning! Loadscript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable ounside of component, or somwhere in config files or ENV variables"),D&&t.language!==this.props.language&&(this.cleanup(),this.setState(function(){return{loaded:!1}},this.cleanupCallback))},n.componentWillUnmount=function(){var t=this;D&&(this.cleanup(),window.setTimeout(function(){t.check.current||(delete window.google,R=!1)},1),this.props.onUnmount&&this.props.onUnmount())},n.render=function(){return o(r,null,o("div",{ref:this.check}),this.state.loaded?this.props.children:this.props.loadingElement||o(V,null))},e}(s);function A(t){var e=t.id,n=void 0===e?I.id:e,o=t.version,r=void 0===o?I.version:o,s=t.googleMapsApiKey,i=t.googleMapsClientId,l=t.language,u=t.region,d=t.libraries,g=t.preventGoogleFontsLoading,f=a(!1),m=p(!1),v=m[0],y=m[1],M=p(void 0),C=M[0],E=M[1];c(function(){return f.current=!0,function(){f.current=!1}},[]),c(function(){D&&g&&O()},[g]),c(function(){v&&(window.google||h(!1))},[v]);var k=T({version:r,googleMapsApiKey:s,googleMapsClientId:i,language:l,region:u,libraries:d});c(function(){function t(){f.current&&(y(!0),_=k)}D&&(window.google&&_===k?t():S({id:n,url:k}).then(t).catch(function(t){f.current&&E(t),console.warn("\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key ("+(s||"-")+") or Client ID ("+(i||"-")+")\n        Otherwise it is a Network issue.\n      "),console.error(t)}))},[n,k]);var b=a();return c(function(){b.current&&d!==b.current&&console.warn("Performance warning! Loadscript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),b.current=d},[d]),{isLoaded:v,loadError:C,url:k}}W.defaultProps=I;var B=o(V,null);function N(t){var e=t.loadingElement,n=t.onLoad,o=t.onError,r=t.onUnmount,s=t.children,i=A(function(t,e){if(null==t)return{};var n,o,r={},s=Object.keys(t);for(o=0;o<s.length;o++)e.indexOf(n=s[o])>=0||(r[n]=t[n]);return r}(t,["loadingElement","onLoad","onError","onUnmount","children"])),a=i.isLoaded,p=i.loadError;return c(function(){a&&"function"==typeof n&&n()},[a,n]),c(function(){p&&"function"==typeof o&&o(p)},[p,o]),c(function(){return function(){r&&r()}},[r]),a?s:e||B}var j=l(N),z={},G={options:function(t,e){t.setOptions(e)}},H=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).state={trafficLayer:null},e.setTrafficLayerCallback=function(){null!==e.state.trafficLayer&&e.props.onLoad&&e.props.onLoad(e.state.trafficLayer)},e.registeredEvents=[],e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.TrafficLayer(m({},this.props.options||{},{map:this.context}));this.registeredEvents=w({updaterMap:G,eventMap:z,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{trafficLayer:t}},this.setTrafficLayerCallback)},n.componentDidUpdate=function(t){null!==this.state.trafficLayer&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:G,eventMap:z,prevProps:t,nextProps:this.props,instance:this.state.trafficLayer}))},n.componentWillUnmount=function(){null!==this.state.trafficLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.trafficLayer),b(this.registeredEvents),this.state.trafficLayer.setMap(null))},n.render=function(){return null},e}(s);H.contextType=y;var Z=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).state={bicyclingLayer:null},e.setBicyclingLayerCallback=function(){null!==e.state.bicyclingLayer&&(e.state.bicyclingLayer.setMap(e.context),e.props.onLoad&&e.props.onLoad(e.state.bicyclingLayer))},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.BicyclingLayer;this.setState(function(){return{bicyclingLayer:t}},this.setBicyclingLayerCallback)},n.componentWillUnmount=function(){null!==this.state.bicyclingLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.bicyclingLayer),this.state.bicyclingLayer.setMap(null))},n.render=function(){return null},e}(s);Z.contextType=y;var F={onCircleComplete:"circlecomplete",onMarkerComplete:"markercomplete",onOverlayComplete:"overlaycomplete",onPolygonComplete:"polygoncomplete",onPolylineComplete:"polylinecomplete",onRectangleComplete:"rectanglecomplete"},K={drawingMode:function(t,e){t.setDrawingMode(e)},options:function(t,e){t.setOptions(e)}},Y=function(t){function e(e){var n;return(n=t.call(this,e)||this).registeredEvents=[],n.state={drawingManager:null},n.setDrawingManagerCallback=function(){null!==n.state.drawingManager&&n.props.onLoad&&n.props.onLoad(n.state.drawingManager)},google.maps.drawing||h(!1),n}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.drawing.DrawingManager(m({},this.props.options||{},{map:this.context}));this.registeredEvents=w({updaterMap:K,eventMap:F,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{drawingManager:t}},this.setDrawingManagerCallback)},n.componentDidUpdate=function(t){null!==this.state.drawingManager&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:K,eventMap:F,prevProps:t,nextProps:this.props,instance:this.state.drawingManager}))},n.componentWillUnmount=function(){null!==this.state.drawingManager&&(this.props.onUnmount&&this.props.onUnmount(this.state.drawingManager),b(this.registeredEvents),this.state.drawingManager.setMap(null))},n.render=function(){return o(r,null)},e}(s);Y.contextType=y;var J={onAnimationChanged:"animation_changed",onClick:"click",onClickableChanged:"clickable_changed",onCursorChanged:"cursor_changed",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDraggableChanged:"draggable_changed",onDragStart:"dragstart",onFlatChanged:"flat_changed",onIconChanged:"icon_changed",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onPositionChanged:"position_changed",onRightClick:"rightclick",onShapeChanged:"shape_changed",onTitleChanged:"title_changed",onVisibleChanged:"visible_changed",onZindexChanged:"zindex_changed"},q={animation:function(t,e){t.setAnimation(e)},clickable:function(t,e){t.setClickable(e)},cursor:function(t,e){t.setCursor(e)},draggable:function(t,e){t.setDraggable(e)},icon:function(t,e){t.setIcon(e)},label:function(t,e){t.setLabel(e)},map:function(t,e){t.setMap(e)},opacity:function(t,e){t.setOpacity(e)},options:function(t,e){t.setOptions(e)},position:function(t,e){t.setPosition(e)},shape:function(t,e){t.setShape(e)},title:function(t,e){t.setTitle(e)},visible:function(t,e){t.setVisible(e)},zIndex:function(t,e){t.setZIndex(e)}},Q=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={marker:null},e.setMarkerCallback=function(){null!==e.state.marker&&e.props.onLoad&&e.props.onLoad(e.state.marker)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=m({},this.props.options||{},this.props.clusterer?{}:{map:this.context},{position:this.props.position}),e=new google.maps.Marker(t);this.props.clusterer?this.props.clusterer.addMarker(e,!!this.props.noClustererRedraw):e.setMap(this.context),this.registeredEvents=w({updaterMap:q,eventMap:J,prevProps:{},nextProps:this.props,instance:e}),this.setState(function(){return{marker:e}},this.setMarkerCallback)},n.componentDidUpdate=function(t){null!==this.state.marker&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:q,eventMap:J,prevProps:t,nextProps:this.props,instance:this.state.marker}))},n.componentWillUnmount=function(){null!==this.state.marker&&(this.props.onUnmount&&this.props.onUnmount(this.state.marker),b(this.registeredEvents),this.props.clusterer?this.props.clusterer.removeMarker(this.state.marker,!!this.props.noClustererRedraw):this.state.marker&&this.state.marker.setMap(null))},n.render=function(){return this.props.children||null},e}(s);Q.contextType=y;var X={onClick:"click",onClusteringBegin:"clusteringbegin",onClusteringEnd:"clusteringend",onMouseOut:"mouseout",onMouseOver:"mouseover"},$={averageCenter:function(t,e){t.setAverageCenter(e)},batchSizeIE:function(t,e){t.setBatchSizeIE(e)},calculator:function(t,e){t.setCalculator(e)},clusterClass:function(t,e){t.setClusterClass(e)},enableRetinaIcons:function(t,e){t.setEnableRetinaIcons(e)},gridSize:function(t,e){t.setGridSize(e)},ignoreHidden:function(t,e){t.setIgnoreHidden(e)},imageExtension:function(t,e){t.setImageExtension(e)},imagePath:function(t,e){t.setImagePath(e)},imageSizes:function(t,e){t.setImageSizes(e)},maxZoom:function(t,e){t.setMaxZoom(e)},minimumClusterSize:function(t,e){t.setMinimumClusterSize(e)},styles:function(t,e){t.setStyles(e)},title:function(t,e){t.setTitle(e)},zoomOnClick:function(t,e){t.setZoomOnClick(e)}},tt=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={markerClusterer:null},e.setClustererCallback=function(){null!==e.state.markerClusterer&&e.props.onLoad&&e.props.onLoad(e.state.markerClusterer)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){if(this.context){var t=new g(this.context,[],this.props.options);this.registeredEvents=w({updaterMap:$,eventMap:X,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{markerClusterer:t}},this.setClustererCallback)}},n.componentDidUpdate=function(t){this.state.markerClusterer&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:$,eventMap:X,prevProps:t,nextProps:this.props,instance:this.state.markerClusterer}))},n.componentWillUnmount=function(){null!==this.state.markerClusterer&&(this.props.onUnmount&&this.props.onUnmount(this.state.markerClusterer),b(this.registeredEvents),this.state.markerClusterer.setMap(null))},n.render=function(){return null!==this.state.markerClusterer?this.props.children(this.state.markerClusterer):null},e}(s);tt.contextType=y;var et={onCloseClick:"closeclick",onContentChanged:"content_changed",onDomReady:"domready",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},nt={options:function(t,e){t.setOptions(e)},position:function(t,e){t.setPosition(e)},zIndex:function(t,e){t.setZIndex(e)}},ot=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.containerElement=null,e.state={infoWindow:null},e.open=function(t,n){n?t.open(e.context,n):t.getPosition()?t.open(e.context):h(!1)},e.setInfowindowCallback=function(){null!==e.state.infoWindow&&null!==e.containerElement&&(e.state.infoWindow.setContent(e.containerElement),e.open(e.state.infoWindow,e.props.anchor),e.props.onLoad&&e.props.onLoad(e.state.infoWindow))},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.InfoWindow(m({},this.props.options||{}));this.containerElement=document.createElement("div"),this.registeredEvents=w({updaterMap:nt,eventMap:et,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{infoWindow:t}},this.setInfowindowCallback)},n.componentDidUpdate=function(t){null!==this.state.infoWindow&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:nt,eventMap:et,prevProps:t,nextProps:this.props,instance:this.state.infoWindow}))},n.componentWillUnmount=function(){null!==this.state.infoWindow&&(b(this.registeredEvents),this.state.infoWindow.close())},n.render=function(){return this.containerElement?f(u.only(this.props.children),this.containerElement):o(r,null)},e}(s);ot.contextType=y;var rt={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},st={draggable:function(t,e){t.setDraggable(e)},editable:function(t,e){t.setEditable(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},path:function(t,e){t.setPath(e)},visible:function(t,e){t.setVisible(e)}},it=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={polyline:null},e.setPolylineCallback=function(){null!==e.state.polyline&&e.props.onLoad&&e.props.onLoad(e.state.polyline)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.Polyline(m({},this.props.options||{},{map:this.context}));this.registeredEvents=w({updaterMap:st,eventMap:rt,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{polyline:t}},this.setPolylineCallback)},n.componentDidUpdate=function(t){null!==this.state.polyline&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:st,eventMap:rt,prevProps:t,nextProps:this.props,instance:this.state.polyline}))},n.componentWillUnmount=function(){null!==this.state.polyline&&(this.props.onUnmount&&this.props.onUnmount(this.state.polyline),b(this.registeredEvents),this.state.polyline.setMap(null))},n.render=function(){return o(r,null)},e}(s);it.contextType=y;var at={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},pt={draggable:function(t,e){t.setDraggable(e)},editable:function(t,e){t.setEditable(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},path:function(t,e){t.setPath(e)},paths:function(t,e){t.setPaths(e)},visible:function(t,e){t.setVisible(e)}},ct=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={polygon:null},e.setPolygonCallback=function(){null!==e.state.polygon&&e.props.onLoad&&e.props.onLoad(e.state.polygon)},e.render=function(){return null},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.Polygon(m({},this.props.options||{},{map:this.context}));this.registeredEvents=w({updaterMap:pt,eventMap:at,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{polygon:t}},this.setPolygonCallback)},n.componentDidUpdate=function(t){null!==this.state.polygon&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:pt,eventMap:at,prevProps:t,nextProps:this.props,instance:this.state.polygon}))},n.componentWillUnmount=function(){null!==this.state.polygon&&(this.props.onUnmount&&this.props.onUnmount(this.state.polygon),b(this.registeredEvents),this.state.polygon&&this.state.polygon.setMap(null))},e}(s);ct.contextType=y;var lt={onBoundsChanged:"bounds_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},ut={bounds:function(t,e){t.setBounds(e)},draggable:function(t,e){t.setDraggable(e)},editable:function(t,e){t.setEditable(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},visible:function(t,e){t.setVisible(e)}},dt=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={rectangle:null},e.setRectangleCallback=function(){null!==e.state.rectangle&&e.props.onLoad&&e.props.onLoad(e.state.rectangle)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.Rectangle(m({},this.props.options||{},{map:this.context}));this.registeredEvents=w({updaterMap:ut,eventMap:lt,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{rectangle:t}},this.setRectangleCallback)},n.componentDidUpdate=function(t){null!==this.state.rectangle&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:ut,eventMap:lt,prevProps:t,nextProps:this.props,instance:this.state.rectangle}))},n.componentWillUnmount=function(){null!==this.state.rectangle&&(this.props.onUnmount&&this.props.onUnmount(this.state.rectangle),b(this.registeredEvents),this.state.rectangle.setMap(null))},n.render=function(){return o(r,null)},e}(s);dt.contextType=y;var ht={onCenterChanged:"center_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRadiusChanged:"radius_changed",onRightClick:"rightclick"},gt={center:function(t,e){t.setCenter(e)},draggable:function(t,e){t.setDraggable(e)},editable:function(t,e){t.setEditable(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},radius:function(t,e){t.setRadius(e)},visible:function(t,e){t.setVisible(e)}},ft=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={circle:null},e.setCircleCallback=function(){null!==e.state.circle&&e.props.onLoad&&e.props.onLoad(e.state.circle)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.Circle(m({},this.props.options||{},{map:this.context}));this.registeredEvents=w({updaterMap:gt,eventMap:ht,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{circle:t}},this.setCircleCallback)},n.componentDidUpdate=function(t){null!==this.state.circle&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:gt,eventMap:ht,prevProps:t,nextProps:this.props,instance:this.state.circle}))},n.componentWillUnmount=function(){null!==this.state.circle&&(this.props.onUnmount&&this.props.onUnmount(this.state.circle),b(this.registeredEvents),this.state.circle&&this.state.circle.setMap(null))},n.render=function(){return o(r,null)},e}(s);ft.contextType=y;var mt={onAddFeature:"addfeature",onClick:"click",onDblClick:"dblclick",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRemoveFeature:"removefeature",onRemoveProperty:"removeproperty",onRightClick:"rightclick",onSetGeometry:"setgeometry",onSetProperty:"setproperty"},vt={add:function(t,e){t.add(e)},addgeojson:function(t,e,n){t.addGeoJson(e,n)},contains:function(t,e){t.contains(e)},foreach:function(t,e){t.forEach(e)},loadgeojson:function(t,e,n,o){t.loadGeoJson(e,n,o)},overridestyle:function(t,e,n){t.overrideStyle(e,n)},remove:function(t,e){t.remove(e)},revertstyle:function(t,e){t.revertStyle(e)},controlposition:function(t,e){t.setControlPosition(e)},controls:function(t,e){t.setControls(e)},drawingmode:function(t,e){t.setDrawingMode(e)},map:function(t,e){t.setMap(e)},style:function(t,e){t.setStyle(e)},togeojson:function(t,e){t.toGeoJson(e)}},yt=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={data:null},e.setDataCallback=function(){null!==e.state.data&&e.props.onLoad&&e.props.onLoad(e.state.data)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.Data(m({},this.props.options||{},{map:this.context}));this.registeredEvents=w({updaterMap:vt,eventMap:mt,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{data:t}},this.setDataCallback)},n.componentDidUpdate=function(t){null!==this.state.data&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:vt,eventMap:mt,prevProps:t,nextProps:this.props,instance:this.state.data}))},n.componentWillUnmount=function(){null!==this.state.data&&(this.props.onUnmount&&this.props.onUnmount(this.state.data),b(this.registeredEvents),this.state.data&&this.state.data.setMap(null))},n.render=function(){return null},e}(s);yt.contextType=y;var Mt={onClick:"click",onDefaultViewportChanged:"defaultviewport_changed",onStatusChanged:"status_changed"},Ct={options:function(t,e){t.setOptions(e)},url:function(t,e){t.setUrl(e)},zIndex:function(t,e){t.setZIndex(e)}},Et=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={kmlLayer:null},e.setKmlLayerCallback=function(){null!==e.state.kmlLayer&&e.props.onLoad&&e.props.onLoad(e.state.kmlLayer)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.KmlLayer(m({},this.props.options,{map:this.context}));this.registeredEvents=w({updaterMap:Ct,eventMap:Mt,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{kmlLayer:t}},this.setKmlLayerCallback)},n.componentDidUpdate=function(t){null!==this.state.kmlLayer&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:Ct,eventMap:Mt,prevProps:t,nextProps:this.props,instance:this.state.kmlLayer}))},n.componentWillUnmount=function(){null!==this.state.kmlLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.kmlLayer),b(this.registeredEvents),this.state.kmlLayer.setMap(null))},n.render=function(){return null},e}(s);Et.contextType=y;var kt=function(t,e){return new e(t.lat,t.lng)},bt=function(t,e){return new e(new google.maps.LatLng(t.ne.lat,t.ne.lng),new google.maps.LatLng(t.sw.lat,t.sw.lng))},wt=function(t,e,n){return t instanceof e?t:n(t,e)},Pt=function(t,e,n,o){return void 0!==n?function(t,e,n){var o=t.fromLatLngToDivPixel(n.getNorthEast()),r=t.fromLatLngToDivPixel(n.getSouthWest());return o&&r?{left:r.x+e.x+"px",top:o.y+e.y+"px",width:o.x-r.x-e.x+"px",height:r.y-o.y-e.y+"px"}:{left:"-9999px",top:"-9999px"}}(t,e,wt(n,google.maps.LatLngBounds,bt)):function(t,e,n){var o=t.fromLatLngToDivPixel(n);return o?{left:o.x+e.x+"px",top:o.y+e.y+"px"}:{left:"-9999px",top:"-9999px"}}(t,e,wt(o,google.maps.LatLng,kt))},xt=function(t){function e(){return t.apply(this,arguments)||this}v(e,t);var n=e.prototype;return n.componentDidMount=function(){this.props.onLoad&&this.props.onLoad()},n.render=function(){return this.props.children},e}(d),Lt=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).state={overlayView:null},e.containerElement=null,e.setOverlayViewCallback=function(){null!==e.state.overlayView&&e.props.onLoad&&e.props.onLoad(e.state.overlayView),e.onPositionElement()},e.onAdd=function(){e.containerElement=document.createElement("div"),e.containerElement.style.position="absolute"},e.onPositionElement=function(){if(null!==e.state.overlayView&&null!==e.containerElement){var t=e.state.overlayView.getProjection(),n=m({x:0,y:0},(r=e.containerElement,"function"==typeof(s=e.props.getPixelPositionOffset)?s(r.offsetWidth,r.offsetHeight):{})),o=Pt(t,n,e.props.bounds,e.props.position);Object.assign(e.containerElement.style,o)}var r,s},e.draw=function(){e.props.mapPaneName||h(!1);var t=e.state.overlayView;if(null!==t){var n=t.getPanes();n&&(e.containerElement&&n[e.props.mapPaneName].appendChild(e.containerElement),e.onPositionElement(),e.forceUpdate())}},e.onRemove=function(){null!==e.containerElement&&e.containerElement.parentNode&&(e.containerElement.parentNode.removeChild(e.containerElement),delete e.containerElement)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.OverlayView;t.onAdd=this.onAdd,t.draw=this.draw,t.onRemove=this.onRemove,t.setMap(this.context),this.setState(function(){return{overlayView:t}})},n.componentDidUpdate=function(t){var e=this;t.position===this.props.position&&t.bounds===this.props.bounds||setTimeout(function(){null!==e.state.overlayView&&e.state.overlayView.draw()},0)},n.componentWillUnmount=function(){null!==this.state.overlayView&&(this.props.onUnmount&&this.props.onUnmount(this.state.overlayView),this.state.overlayView.setMap(null))},n.render=function(){return null!==this.containerElement?f(o(xt,{onLoad:this.setOverlayViewCallback},u.only(this.props.children)),this.containerElement):o(r,null)},e}(s);Lt.FLOAT_PANE="floatPane",Lt.MAP_PANE="mapPane",Lt.MARKER_LAYER="markerLayer",Lt.OVERLAY_LAYER="overlayLayer",Lt.OVERLAY_MOUSE_TARGET="overlayMouseTarget",Lt.contextType=y;var Dt={onDblClick:"dblclick",onClick:"click"},St={opacity:function(t,e){t.setOpacity(e)}},Ut=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={groundOverlay:null},e.setGroundOverlayCallback=function(){null!==e.state.groundOverlay&&e.props.onLoad&&e.props.onLoad(e.state.groundOverlay)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){this.props.url||this.props.bounds||h(!1);var t=new google.maps.GroundOverlay(this.props.url,this.props.bounds,m({},this.props.options,{map:this.context}));this.registeredEvents=w({updaterMap:St,eventMap:Dt,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{groundOverlay:t}},this.setGroundOverlayCallback)},n.componentDidUpdate=function(t){null!==this.state.groundOverlay&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:St,eventMap:Dt,prevProps:t,nextProps:this.props,instance:this.state.groundOverlay}))},n.componentWillUnmount=function(){this.state.groundOverlay&&(this.props.onUnmount&&this.props.onUnmount(this.state.groundOverlay),this.state.groundOverlay.setMap(null))},n.render=function(){return null},e}(s);Ut.defaultProps={onLoad:function(){}},Ut.contextType=y;var Ot={},Tt={data:function(t,e){t.setData(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)}},Rt=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={heatmapLayer:null},e.setHeatmapLayerCallback=function(){null!==e.state.heatmapLayer&&e.props.onLoad&&e.props.onLoad(e.state.heatmapLayer)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){google.maps.visualization||h(!1),this.props.data||h(!1);var t=new google.maps.visualization.HeatmapLayer(m({data:this.props.data},this.props.options||{},{map:this.context}));this.registeredEvents=w({updaterMap:Tt,eventMap:Ot,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{heatmapLayer:t}},this.setHeatmapLayerCallback)},n.componentDidUpdate=function(t){b(this.registeredEvents),this.registeredEvents=w({updaterMap:Tt,eventMap:Ot,prevProps:t,nextProps:this.props,instance:this.state.heatmapLayer})},n.componentWillUnmount=function(){null!==this.state.heatmapLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.heatmapLayer),b(this.registeredEvents),this.state.heatmapLayer.setMap(null))},n.render=function(){return null},e}(s);Rt.contextType=y;var Vt={onCloseClick:"closeclick",onPanoChanged:"pano_changed",onPositionChanged:"position_changed",onPovChanged:"pov_changed",onResize:"resize",onStatusChanged:"status_changed",onVisibleChanged:"visible_changed",onZoomChanged:"zoom_changed"},_t={register:function(t,e,n){t.registerPanoProvider(e,n)},links:function(t,e){t.setLinks(e)},motionTracking:function(t,e){t.setMotionTracking(e)},options:function(t,e){t.setOptions(e)},pano:function(t,e){t.setPano(e)},position:function(t,e){t.setPosition(e)},pov:function(t,e){t.setPov(e)},visible:function(t,e){t.setVisible(e)},zoom:function(t,e){t.setZoom(e)}},It=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={streetViewPanorama:null},e.setStreetViewPanoramaCallback=function(){null!==e.state.streetViewPanorama&&e.props.onLoad&&e.props.onLoad(e.state.streetViewPanorama)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=this.context.getStreetView();this.registeredEvents=w({updaterMap:_t,eventMap:Vt,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{streetViewPanorama:t}},this.setStreetViewPanoramaCallback)},n.componentDidUpdate=function(t){null!==this.state.streetViewPanorama&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:_t,eventMap:Vt,prevProps:t,nextProps:this.props,instance:this.state.streetViewPanorama}))},n.componentWillUnmount=function(){null!==this.state.streetViewPanorama&&(this.props.onUnmount&&this.props.onUnmount(this.state.streetViewPanorama),b(this.registeredEvents),this.state.streetViewPanorama.setVisible(!1))},n.render=function(){return null},e}(s);It.contextType=y;var Wt=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).state={streetViewService:null},e.setStreetViewServiceCallback=function(){null!==e.state.streetViewService&&e.props.onLoad&&e.props.onLoad(e.state.streetViewService)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.StreetViewService;this.setState(function(){return{streetViewService:t}})},n.componentWillUnmount=function(){null!==this.state.streetViewService&&this.props.onUnmount&&this.props.onUnmount(this.state.streetViewService)},n.render=function(){return null},e}(s);Wt.contextType=y;var At=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).state={directionsService:null},e.setDirectionsServiceCallback=function(){null!==e.state.directionsService&&e.props.onLoad&&e.props.onLoad(e.state.directionsService)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){this.props.options||h(!1);var t=new google.maps.DirectionsService;this.setState(function(){return{directionsService:t}},this.setDirectionsServiceCallback)},n.componentDidUpdate=function(){null!==this.state.directionsService&&this.state.directionsService.route(this.props.options,this.props.callback)},n.componentWillUnmount=function(){null!==this.state.directionsService&&this.props.onUnmount&&this.props.onUnmount(this.state.directionsService)},n.render=function(){return o(r,null)},e}(s),Bt={onDirectionsChanged:"directions_changed"},Nt={directions:function(t,e){t.setDirections(e)},map:function(t,e){t.setMap(e)},options:function(t,e){t.setOptions(e)},panel:function(t,e){t.setPanel(e)},routeIndex:function(t,e){t.setRouteIndex(e)}},jt=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.state={directionsRenderer:null},e.setDirectionsRendererCallback=function(){null!==e.state.directionsRenderer&&(e.state.directionsRenderer.setMap(e.context),e.props.onLoad&&e.props.onLoad(e.state.directionsRenderer))},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=new google.maps.DirectionsRenderer(this.props.options);this.registeredEvents=w({updaterMap:Nt,eventMap:Bt,prevProps:{},nextProps:this.props,instance:t}),this.setState(function(){return{directionsRenderer:t}},this.setDirectionsRendererCallback)},n.componentDidUpdate=function(t){null!==this.state.directionsRenderer&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:Nt,eventMap:Bt,prevProps:t,nextProps:this.props,instance:this.state.directionsRenderer}))},n.componentWillUnmount=function(){null!==this.state.directionsRenderer&&(this.props.onUnmount&&this.props.onUnmount(this.state.directionsRenderer),b(this.registeredEvents),this.state.directionsRenderer&&this.state.directionsRenderer.setMap(null))},n.render=function(){return o(r,null)},e}(s);jt.contextType=y;var zt=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).state={distanceMatrixService:null},t.setDistanceMatrixServiceCallbak=function(){null!==t.state.distanceMatrixService&&t.props.onLoad&&t.props.onLoad(t.state.distanceMatrixService)},t}v(n,e);var o=n.prototype;return o.componentDidMount=function(){this.props.options||h(!1);var t=new google.maps.DistanceMatrixService;this.setState(function(){return{distanceMatrixService:t}},this.setDistanceMatrixServiceCallbak)},o.componentDidUpdate=function(){null!==this.state.distanceMatrixService&&this.state.distanceMatrixService.getDistanceMatrix(this.props.options,this.props.callback)},o.componentWillUnmount=function(){null!==this.state.distanceMatrixService&&this.props.onUnmount&&this.props.onUnmount(this.state.distanceMatrixService)},o.render=function(){return t.createElement(t.Fragment,null)},n}(t.PureComponent),Gt={onPlacesChanged:"places_changed"},Ht={bounds:function(t,e){t.setBounds(e)}},Zt=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.containerElement=i(),e.state={searchBox:null},e.setSearchBoxCallback=function(){null!==e.state.searchBox&&e.props.onLoad&&e.props.onLoad(e.state.searchBox)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){if(google.maps.places||h(!1),null!==this.containerElement&&null!==this.containerElement.current){var t=this.containerElement.current.querySelector("input");if(t){var e=new google.maps.places.SearchBox(t,this.props.options);this.registeredEvents=w({updaterMap:Ht,eventMap:Gt,prevProps:{},nextProps:this.props,instance:e}),this.setState(function(){return{searchBox:e}},this.setSearchBoxCallback)}}},n.componentDidUpdate=function(t){null!==this.state.searchBox&&(b(this.registeredEvents),this.registeredEvents=w({updaterMap:Ht,eventMap:Gt,prevProps:t,nextProps:this.props,instance:this.state.searchBox}))},n.componentWillUnmount=function(){null!==this.state.searchBox&&(this.props.onUnmount&&this.props.onUnmount(this.state.searchBox),b(this.registeredEvents))},n.render=function(){return o("div",{ref:this.containerElement},u.only(this.props.children))},e}(s);Zt.contextType=y;var Ft={onPlaceChanged:"place_changed"},Kt={bounds:function(t,e){t.setBounds(e)},restrictions:function(t,e){t.setComponentRestrictions(e)},fields:function(t,e){t.setFields(e)},options:function(t,e){t.setOptions(e)},types:function(t,e){t.setTypes(e)}},Yt=function(t){function e(){var e;return(e=t.apply(this,arguments)||this).registeredEvents=[],e.containerElement=i(),e.state={autocomplete:null},e.setAutocompleteCallback=function(){null!==e.state.autocomplete&&e.props.onLoad&&e.props.onLoad(e.state.autocomplete)},e}v(e,t);var n=e.prototype;return n.componentDidMount=function(){google.maps.places||h(!1);var t=this.containerElement.current.querySelector("input");if(t){var e=new google.maps.places.Autocomplete(t,this.props.options);this.registeredEvents=w({updaterMap:Kt,eventMap:Ft,prevProps:{},nextProps:this.props,instance:e}),this.setState(function(){return{autocomplete:e}},this.setAutocompleteCallback)}},n.componentDidUpdate=function(t){b(this.registeredEvents),this.registeredEvents=w({updaterMap:Kt,eventMap:Ft,prevProps:t,nextProps:this.props,instance:this.state.autocomplete})},n.componentWillUnmount=function(){null!==this.state.autocomplete&&b(this.registeredEvents)},n.render=function(){return o("div",{ref:this.containerElement},u.only(this.props.children))},e}(s);Yt.contextType=y;export{Yt as Autocomplete,Z as BicyclingLayer,ft as Circle,yt as Data,jt as DirectionsRenderer,At as DirectionsService,zt as DistanceMatrixService,Y as DrawingManager,L as GoogleMap,Ut as GroundOverlay,Rt as HeatmapLayer,ot as InfoWindow,Et as KmlLayer,W as LoadScript,j as LoadScriptNext,Q as Marker,tt as MarkerClusterer,Lt as OverlayView,ct as Polygon,it as Polyline,dt as Rectangle,Zt as StandaloneSearchBox,It as StreetViewPanorama,Wt as StreetViewService,H as TrafficLayer,M as useGoogleMap,A as useLoadScript};
//# sourceMappingURL=reactgooglemapsapi.es.production.js.map
